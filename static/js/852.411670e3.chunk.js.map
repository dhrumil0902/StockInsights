{"version":3,"file":"static/js/852.411670e3.chunk.js","mappings":"8JAGA,MAsEMA,EAAS,CACbC,YAAa,CACXC,UAAW,UAEbC,cAAe,CACbC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,UAAW,QACXC,UAAW,OACXC,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdC,gBAAiB,WAEnBC,QAAS,CACPT,QAAS,QACTU,eAAgB,OAChBJ,OAAQ,iBACRC,aAAc,MACdF,QAAS,OACTG,gBAAiB,OACjBG,WAAY,gBACZC,UAAW,+BAEbC,YAAa,CACXC,MAAO,QAETC,UAAW,CACTC,SAAU,OACVC,OAAQ,aACRC,WAAY,OACZJ,MAAO,WAETK,gBAAiB,CACfH,SAAU,OACVC,OAAQ,IAIZ,EA9GkBG,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAmCnC,OAjCAK,EAAAA,EAAAA,YAAU,KAwBJR,GAvBcS,WAChB,IACEJ,GAAW,GACXE,EAAS,MAET,MAAMG,EAAaC,CAAAA,SAAAA,aAAAA,WAAAA,aAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBAA0B,mCACnDC,QAAiBC,EAAAA,EAAMC,IAC3B,qDAAqDf,IAAU,CAC7DgB,QAAS,CACP,4BAA6BN,KAKnCR,EAAQW,EAASI,KAAKC,MAAMC,MAAM,EAAG,IACrCd,GAAW,EACb,CAAE,MAAOC,GACPc,QAAQd,MAAM,uBAAwBA,GACtCC,EAAS,gDACTF,GAAW,EACb,GAIAgB,GAGK,KACLnB,EAAQ,GAAG,IAEZ,CAACF,KAGFsB,EAAAA,EAAAA,MAAA,OAAKC,MAAOhD,EAAOC,YAAYgD,SAAA,CAC5BxB,IAAUyB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACdpB,GACCqB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBACDlB,GACFmB,EAAAA,EAAAA,KAAA,KAAAD,SAAIlB,IACFL,EAAKyB,OAAS,GAChBD,EAAAA,EAAAA,KAAA,OAAKF,MAAOhD,EAAOG,cAAc8C,SAC9BvB,EAAK0B,KAAI,CAACC,EAASC,KAClBJ,EAAAA,EAAAA,KAAA,KAEEK,KAAMF,EAAQG,IACdC,OAAO,SACPC,IAAI,sBACJV,MAAOhD,EAAOa,QAAQoC,UAEtBF,EAAAA,EAAAA,MAAA,OAAKC,MAAOhD,EAAOiB,YAAYgC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,MAAOhD,EAAOmB,UAAU8B,SAAEI,EAAQM,QACtCT,EAAAA,EAAAA,KAAA,KAAGF,MAAOhD,EAAOuB,gBAAgB0B,SAAEI,EAAQO,kBARxCN,QAcXP,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,yBAAuBxB,EAAO,SAE/B,C","sources":["components/StockNews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StockNews = ({ ticker }) => {\r\n  const [news, setNews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const bingApiKey = process.env.REACT_APP_BING_API_KEY || '25cc9a76f7b947e4826067f2fa8c76ab';\r\n        const response = await axios.get(\r\n          `https://api.bing.microsoft.com/v7.0/news/search?q=${ticker}`, {\r\n            headers: {\r\n              'Ocp-Apim-Subscription-Key': bingApiKey,\r\n            }\r\n          }\r\n        );\r\n\r\n        setNews(response.data.value.slice(0, 6)); // Get the top 6 news articles\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching news:', error);\r\n        setError('Failed to load news. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (ticker) {\r\n      fetchNews();\r\n    }\r\n\r\n    return () => {\r\n      setNews([]);\r\n    };\r\n  }, [ticker]);\r\n\r\n  return (\r\n    <div style={styles.newsWrapper}>\r\n      {ticker && <h3>Latest News</h3>}\r\n      {loading ? (\r\n        <p>Loading news...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : news.length > 0 ? (\r\n        <div style={styles.newsContainer}>\r\n          {news.map((article, index) => (\r\n            <a\r\n              key={index}\r\n              href={article.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={styles.newsBox}\r\n            >\r\n              <div style={styles.newsContent}>\r\n                <h4 style={styles.newsTitle}>{article.name}</h4>\r\n                <p style={styles.newsDescription}>{article.description}</p>\r\n              </div>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No news available for {ticker}.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Basic styling for the news layout with scroll\r\nconst styles = {\r\n  newsWrapper: {\r\n    textAlign: 'center',\r\n  },\r\n  newsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '15px',\r\n    maxHeight: '500px', // Set the maximum height of the news container\r\n    overflowY: 'auto', // Enable vertical scroll when content exceeds height\r\n    padding: '10px', // Optional padding\r\n    border: '1px solid #ddd',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  newsBox: {\r\n    display: 'block',\r\n    textDecoration: 'none',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '8px',\r\n    padding: '15px',\r\n    backgroundColor: '#fff',\r\n    transition: 'all 0.3s ease',\r\n    boxShadow: '0px 4px 8px rgba(0,0,0,0.1)',\r\n  },\r\n  newsContent: {\r\n    color: '#333',\r\n  },\r\n  newsTitle: {\r\n    fontSize: '16px',\r\n    margin: '0 0 10px 0',\r\n    fontWeight: 'bold',\r\n    color: '#0077cc',\r\n  },\r\n  newsDescription: {\r\n    fontSize: '14px',\r\n    margin: 0,\r\n  },\r\n};\r\n\r\nexport default StockNews;\r\n"],"names":["styles","newsWrapper","textAlign","newsContainer","display","flexDirection","gap","maxHeight","overflowY","padding","border","borderRadius","backgroundColor","newsBox","textDecoration","transition","boxShadow","newsContent","color","newsTitle","fontSize","margin","fontWeight","newsDescription","_ref","ticker","news","setNews","useState","loading","setLoading","error","setError","useEffect","async","bingApiKey","process","REACT_APP_BING_API_KEY","response","axios","get","headers","data","value","slice","console","fetchNews","_jsxs","style","children","_jsx","length","map","article","index","href","url","target","rel","name","description"],"sourceRoot":""}